(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{460:function(s,t,a){"use strict";a.r(t);var e=a(29),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("blockquote",[a("p",[s._v("最近在学"),a("code",[s._v("gRPC")]),s._v("，看了一下，还是挺有用的，先记录一些笔记")])]),s._v(" "),a("h3",{attrs:{id:"正文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[s._v("#")]),s._v(" 正文")]),s._v(" "),a("h4",{attrs:{id:"一些常规用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些常规用法"}},[s._v("#")]),s._v(" 一些常规用法")]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("syntax")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"proto3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不在头部声明，则使用proto2协议")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"date.proto"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//导入其他包")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//假设打包，C#的命名空间就是My.Project")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v("  my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("project"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("option")]),s._v(" csharp_namespace "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My.WebApis"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//假设加上这句，上面的命名空间会变成这个，但是在proto文件里面，他的包还是上面的my.project")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义一个message，类似于C#类")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义一个 tag int32是数据类型， id是名称，1是tag（tag不能重复，常用建议使用1-15(占一个bit)，不常用用16-2^32-1(占用2bit)），19000-19999是保留的，不能用")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),s._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),s._v(" weight "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bytes")]),s._v(" avatar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v(" email_verifed "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("repeated")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" phone_number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//类似List<T> repeated 表示存在多个")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//保留字段")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("reserved")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//数值，字符串，分开\t\t一个字段，若不使用，而且后面也不许其他人使用tag，那么就可以使用reserved表明")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("reserved")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//也可以使用 OBSOLETE_xxxx 来表示字段已经废弃了")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//例: bool OBSOLETE_email_verifed = 7;")]),s._v("\n\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Gender")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("option")]),s._v(" allow_alias "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//允许枚举值别名")]),s._v("\n    NOT_SPECIFIED "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//枚举默认从0开始")]),s._v("\n    FEMALE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    WOMAN "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需要设置允许别名，tag才能重复")]),s._v("\n    MALE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    MAN "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("reserved")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//保留枚举中的值，max表示可能的最大值")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("reserved")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BOY"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GIRL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//枚举中也可以存在保留字段")]),s._v("\n    \n    \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[s._v("Gender")]),s._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[s._v("Date")]),s._v(" birthday "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("repeated")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[s._v("Address")]),s._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可以自定义属性")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" province "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" zip_code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" street "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),a("h4",{attrs:{id:"默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认值"}},[s._v("#")]),s._v(" 默认值")]),s._v(" "),a("p",[s._v("默认值要不影响业务逻辑（无法区分的默认值可能对程序造成破坏性影响）")]),s._v(" "),a("p",[s._v("比如人口"),a("code",[s._v("pop")]),s._v("，如果要赋默认值，则可以赋值"),a("code",[s._v("-1")])]),s._v(" "),a("p",[s._v("或者在代码中进行判断")]),s._v(" "),a("p",[s._v("枚举中的默认值：")]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tUNSPECIFIED "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tDEVELOPER "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tTESTER "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//假设这时候程序一端接收到一个值为3的枚举，那么它会默认当前值为0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h4",{attrs:{id:"生成代码-打包-工具protocol-buffer-编译器-protoc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成代码-打包-工具protocol-buffer-编译器-protoc"}},[s._v("#")]),s._v(" 生成代码（打包，工具protocol buffer 编译器，protoc）")]),s._v(" "),a("p",[s._v("将"),a("code",[s._v("first.proto")]),s._v("编译生成到"),a("code",[s._v("csdir")]),s._v("文件夹中")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("protoc --csharp_out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("csdir *.proto \n")])])]),a("p",[s._v("生成当前目录下所有的"),a("code",[s._v("proto")]),s._v("文件到指定目录中")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("protoc --csharp_out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("csdir *.proto \n")])])]),a("h3",{attrs:{id:"简单理解原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单理解原理"}},[s._v("#")]),s._v(" 简单理解原理")]),s._v(" "),a("h4",{attrs:{id:"简单理解结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单理解结构"}},[s._v("#")]),s._v(" 简单理解结构")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/OG39Q8a.png",alt:""}})]),s._v(" "),a("p",[a("code",[s._v("Client")]),s._v("与"),a("code",[s._v("Server")]),s._v("不直接通信，而是通过proto文件生成的代码来解释")]),s._v(" "),a("p",[s._v("但是生成的代码不负责传输，传输层使用的是"),a("code",[s._v("protocol buffers")]),s._v("协议传输，并且在设计的时候，这个协议采用可插拔方式，若功能不满足，则可以自己参考文档开发自己的传输类型")]),s._v(" "),a("h4",{attrs:{id:"设计步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计步骤"}},[s._v("#")]),s._v(" 设计步骤")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/01/05/lLCIV5ecsH9kYWt.png",alt:""}})]),s._v(" "),a("ul",[a("li",[s._v("定义消息，即：创建"),a("code",[s._v(".proto")]),s._v("文件")]),s._v(" "),a("li",[s._v("生成代码，执行打包命令")]),s._v(" "),a("li",[s._v("开发"),a("code",[s._v("Client/Server")]),s._v("，具体的业务逻辑")])]),s._v(" "),a("h4",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[s._v("#")]),s._v(" 生命周期")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/01/05/SPcoZj1ClgFR4Vd.png",alt:""}})]),s._v(" "),a("p",[s._v("如果需要身份认证，需要在"),a("code",[s._v("gRPC")]),s._v("里面实现")]),s._v(" "),a("h4",{attrs:{id:"身份认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#身份认证"}},[s._v("#")]),s._v(" 身份认证")]),s._v(" "),a("p",[s._v("不是用户的身份认证，而是多个"),a("code",[s._v("server")]),s._v("和"),a("code",[s._v("client")]),s._v("之间的认证，分辨谁是谁，并且进行数据传输")]),s._v(" "),a("p",[s._v("四种认证机制：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("不采取任何措施的连接（不安全连接）")]),s._v(" "),a("p",[s._v("采用HTTP1，使用明文在网络上传输，不需要任何特殊处理，快速建立"),a("code",[s._v("gRPC")]),s._v("的情况，可以后续再添加安全处理")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("TLS/SSL")]),s._v("连接，"),a("code",[s._v("client")]),s._v("会对证书进行安全认证，需要做一些额外的工作")])]),s._v(" "),a("li",[a("p",[s._v("基于"),a("code",[s._v("Google Token")]),s._v("身份认证，在安全连接（HTTPS）之上使用")])]),s._v(" "),a("li",[a("p",[s._v("自定义身份认证提供商（OAuth2）")])])]),s._v(" "),a("h4",{attrs:{id:"消息传输类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息传输类型"}},[s._v("#")]),s._v(" 消息传输类型")]),s._v(" "),a("p",[s._v("四种传输类型：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("一元消息（请求——响应）")]),s._v(" "),a("p",[s._v("消息格式："),a("strong",[s._v("（即使请求不需要传输数据，也要在请求传输一个空对象）")])]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rpc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("requestmessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("responsemessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("server streaming（流），server把数据streaming回给client（分成多块返回）")]),s._v(" "),a("p",[s._v("消息格式：（不会把整个消息一起返回，而是把消息拆分多次发送，比如"),a("strong",[s._v("流视频")]),s._v("）")]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rpc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("requestmessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("stream")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("responsemessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])])])]),s._v(" "),a("li",[a("p",[s._v("client streaming，client把数据streaming给server（多块）")]),s._v(" "),a("p",[s._v("消息格式：（分多次传输，比如"),a("strong",[s._v("上传文件")]),s._v("，server在接收时会一直等待，直到接收完所有的块，才会处理，返回）")]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rpc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("stream")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("requestmessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("responsemessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])])])]),s._v(" "),a("li",[a("p",[s._v("最后是双向的streaming")]),s._v(" "),a("p",[s._v("消息格式：（client，先发送一次，后面接着发，server会将收到的先处理，返回，后面接着返回）"),a("strong",[s._v("异步")])]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rpc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("stream")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("requestmessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("stream")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("responsemessagetype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])])])])]),s._v(" "),a("h4",{attrs:{id:"demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[s._v("#")]),s._v(" Demo")])])}),[],!1,null,null,null);t.default=n.exports}}]);